# Configuration settings used only for bitstream builds
# This is the "hw" target of v++
[vivado]

# These match the timing strategy used in aws-fpga
prop=run.impl_1.STEPS.OPT_DESIGN.ARGS.DIRECTIVE=Explore

prop=run.impl_1.STEPS.PLACE_DESIGN.ARGS.DIRECTIVE=ExtraNetDelay_high

prop=run.impl_1.STEPS.ROUTE_DESIGN.ARGS.DIRECTIVE=Explore
prop=run.impl_1.{STEPS.ROUTE_DESIGN.ARGS.MORE OPTIONS}={-tns_cleanup}

prop=run.impl_1.STEPS.PHYS_OPT_DESIGN.IS_ENABLED=true
prop=run.impl_1.STEPS.PHYS_OPT_DESIGN.ARGS.DIRECTIVE=Explore

prop=run.impl_1.STEPS.POST_ROUTE_PHYS_OPT_DESIGN.IS_ENABLED=true
prop=run.impl_1.{STEPS.POST_ROUTE_PHYS_OPT_DESIGN.ARGS.MORE OPTIONS}={-sll_reg_hold_fix}

# See Note 1

# Note 1. There was .5ns skew between the source and destination clock on a
# path that spanned two SLRs, just as the critical warning gauged.. I've
# enabled -sll_reg_hold_fix since for now, but this warrants further
# investigation.
#
# WARNING: [Route 35-459] Router was unable to fix hold violation on 31 pins. This could be due to a combination of congestion, blockages and run-time limitations. Such pins are:
#	level0_i/level1/level1_i/ulp/ip_rs_axi_data_c2h_00/inst/b16.b_auto/m_areset_resp_reg_psap_11/D
#
# CRITICAL WARNING: [Physopt 32-954] Router is skipping hold fixing on SLR
# crossing paths with direct Laguna TX to RX connection as the number of
# violations exceeds the runtime threshold for this hold fixing in the router.
#
# Resolution: A large number of hold violations on direct Laguna TX to RX paths
# is an indication of a clocking topology that causes larger than expected amount
# of clock skew on SLR crossing paths.  Please ensure that the registers
# implementing the Laguna TX to RX connection are on the same clock net and the
# root of the clock net is in the center of the device.  You can also run
# phys_opt_design with the -sll_reg_hold_fix option after route_design to attempt
# fixing hold violations on these direct Laguna TX to RX paths with potentially
# long runtime.

